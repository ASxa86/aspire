stages:
  - lint
  - build
  - test

variables:
  NUGET_SOURCE: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/nuget/index.json"
  NUGET_NAME: gitlab
  VCPKG_VERSION: 2024.02.14
  VCPKG_BINARY_SOURCES: "clear;nuget,${NUGET_NAME},readwrite"
  CMAKE_COMMAND: ${CI_PROJECT_DIR}/vcpkg/downloads/tools/cmake-3.27.1-linux/cmake-3.27.1-linux-x86_64/bin/cmake
  NUGET_COMMAND: ${CI_PROJECT_DIR}/vcpkg/downloads/tools/nuget-6.2.1-linux/nuget.exe

.get-vcpkg: &get-vcpkg
  # Get vcpkg
  - git clone https://github.com/microsoft/vcpkg.git --depth 1 --branch ${VCPKG_VERSION}
  - ./vcpkg/bootstrap-vcpkg.sh
  - ./vcpkg/vcpkg fetch nuget
  - ./vcpkg/vcpkg fetch cmake

  # Configure NuGet
  - mono ${NUGET_COMMAND} sources add -source ${NUGET_SOURCE} -name ${NUGET_NAME} -username gitlab-ci-token -password $CI_JOB_TOKEN

build-clang-tidy:
  image: $CI_REGISTRY/asxa86/images/ubuntu-dev:latest
  stage: build
  needs: []
  tags:
    # - saas-linux-medium-amd64
    - shelley
    - docker
  script:
    - *get-vcpkg

    # Configure Aspire
    - ${CMAKE_COMMAND} --preset clang-debug

    # Build to force generate moc files.
    - ${CMAKE_COMMAND} --build --preset clang-debug

    # Run Clang Tidy
    - /usr/bin/run-clang-tidy-17 -p build src/ app/

.build-base:
  image: $CI_REGISTRY/asxa86/images/ubuntu-dev:latest
  stage: build
  needs: []
  tags:
    - saas-linux-medium-amd64
  script:
    - *get-vcpkg

    # Build Aspire
    - ${CMAKE_COMMAND} --preset ${CMAKE_PRESET}
    - ${CMAKE_COMMAND} --build --preset ${CMAKE_PRESET}
  artifacts:
    when: on_failure
    paths:
      - vcpkg/buildtrees/**/*.txt
      - vcpkg/buildtrees/**/*.log

# build-clang-debug:
#   extends: .build-base
#   variables:
#     CMAKE_PRESET: clang-debug

build-gcc-release:
  extends: .build-base
  variables:
    CMAKE_PRESET: gcc-release
