function(project_add_qml_module)
    # Define URI and folder path.
    string(REPLACE "-" "/" MODULE_FOLDER_NAME ${PROJECT_NAME})
    string(REPLACE "-" "." MODULE_URI_NAME ${PROJECT_NAME})

    if(BUILD_SHARED_LIBS)
        set(PROJECT_QML_LINKAGE SHARED)
    else()
        set(PROJECT_QML_LINKAGE STATIC)
    endif()

    set(QML_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/${MODULE_FOLDER_NAME})

    qt_add_qml_module(${PROJECT_NAME}
        PLUGIN_TARGET ${PROJECT_NAME}-plugin
        RESOURCE_PREFIX /
        OUTPUT_DIRECTORY ${QML_OUTPUT_DIRECTORY}
        VERSION 1.0
        ${PROJECT_QML_LINKAGE}
        URI ${MODULE_URI_NAME}
        ${ARGV}
    )

    if(MSVC)
        set(PROJECT_MODULE_DIR ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/$<CONFIGURATION>/${MODULE_FOLDER_NAME})
    else()
        set(PROJECT_MODULE_DIR ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${MODULE_FOLDER_NAME})
    endif()

    # Ensure plugins are written with no postfixes as the autogenerated qmldir's will not contain them.
    set_target_properties(${PROJECT_NAME}-plugin PROPERTIES
        DEBUG_POSTFIX ""
        RELWITHDEBINFO_POSTFIX ""
        LIBRARY_OUTPUT_DIRECTORY_DEBUG ${PROJECT_MODULE_DIR}
        LIBRARY_OUTPUT_DIRECTORY_RELEASE ${PROJECT_MODULE_DIR}
        LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${PROJECT_MODULE_DIR}
        RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_MODULE_DIR}
        RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_MODULE_DIR}
        RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${PROJECT_MODULE_DIR}
        ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_MODULE_DIR}
        ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_MODULE_DIR}
        ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${PROJECT_MODULE_DIR}
    )

    target_include_directories(${PROJECT_NAME} PRIVATE ${PROJECT_INCLUDE_DIR}/${MODULE_FOLDER_NAME})
    target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})

    # Collect all *.qml files from the project and ensure they're installed to the project's plugin directory.
    file(GLOB QML_FILES ${QML_OUTPUT_DIRECTORY}/*.qml)

    list(APPEND QML_FILES ${QML_OUTPUT_DIRECTORY}/qmldir ${QML_OUTPUT_DIRECTORY}/${PROJECT_NAME}.qmltypes)

    # Post build to handle copying qmltypes and qmldir to correct directory.
    add_custom_command(TARGET ${PROJECT_NAME}-plugin POST_BUILD
        COMMAND
            ${CMAKE_COMMAND} -E make_directory ${PROJECT_MODULE_DIR}
        COMMAND
            ${CMAKE_COMMAND} -E copy ${QML_FILES} ${PROJECT_MODULE_DIR}
    )

    install(
        FILES ${QML_FILES}
        DESTINATION ${CMAKE_INSTALL_PREFIX}/plugins/${MODULE_FOLDER_NAME}
    )

    install(
        TARGETS ${PROJECT_NAME}-plugin
        EXPORT ${PROJECT_EXPORT_TARGET}
        LIBRARY DESTINATION plugins/${MODULE_FOLDER_NAME}
        ARCHIVE DESTINATION plugins/${MODULE_FOLDER_NAME}
        RUNTIME DESTINATION plugins/${MODULE_FOLDER_NAME}
    )
endfunction()
